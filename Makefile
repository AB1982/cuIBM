include Makefile.inc

#test:
#	echo $(PROJ_ROOT)
#	echo $(dir $(lastword $(MAKEFILE_LIST)))

# just so that make is not confused if there exist
# files called cuibm or clean
.PHONY: cuibm src/solvers/libsolvers.a clean

# this is the command called when 'make' is run in the command line
main: cuibm

# libraries generated by compiling the code
LIBS = lib/libNavierStokesSolvers.a lib/libCuspWrapped.a lib/libIO.a

# library generate by compiling the YAML headers
EXT_LIBS = external/lib/libyaml-cpp.a

# final library
FINAL_LIB = lib/libcuIBM.a

# everything after the colon is a prerequisite
# they are all targets that are executed in order before the current target
# if the targets are not explicitly defined, implicit rules are used
# targets are the usually the names of the files generated

# the implicit rule .cu.o converts src/parameterDB.cu to src/parameterDB.o

# link all the object files and libraries to create the executable bin/cuIBM
cuibm: src/parameterDB.o $(LIBS) $(EXT_LIBS)  src/cuIBM.o src/bodies.o 
	nvcc $? -o bin/cuIBM

#lib/libcuIBM.a: $(LIBS) $(EXT_LIBS)
#	cd lib; libtool -static -o libcuIBM.a $?

#  force_look is a dependency
#  it is always true. So this command is always executed
lib/libNavierStokesSolvers.a: force_look
	cd src/solvers; $(MAKE) $(MFLAGS)

lib/libCuspWrapped.a: force_look
	cd src/cusp/; $(MAKE) $(MFLAGS)
  
lib/libIO.a: force_look
	cd src/io/; $(MAKE) $(MFLAGS)

external/lib/libyaml-cpp.a:
	cd external; $(MAKE) $(MFLAGS) all

#  deletes all the object files
#  it seems MFLAGS hasn't been defined anywhere. The defaults are probably used.
#  @ at the beginning of a line suppresses output. This works only in Makefiles.
#  1. delete all the .a and .o files
#  2. cd to the concerned folders
#  3. run 'make clean' as defined in the Makefiles in those folders
clean:
	@rm -f lib/*.a bin/cuIBM src/*.o
	cd src/solvers; $(MAKE) $(MFLAGS) clean
	cd src/cusp; $(MAKE) $(MFLAGS) clean
	cd src/io; $(MAKE) $(MFLAGS) clean
	cd external; $(MAKE) $(MFLAGS) clean

#
force_look:
	true

#
.PHONY: cuibm
